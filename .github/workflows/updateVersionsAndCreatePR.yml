name: Update Versions and Create PR

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
      zowe_version:
        description: 'Zowe version ("zowe-v1-lts" or "zowe-v2-lts")'
        required: true

jobs:
  update_versions_and_create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt install gh

      - name: Check gh version
        run: gh --version

      - name: Create Branch
        run: |
          version_name="${{ github.event.inputs.version }}"
          branch_name="update-versions-${version_name}"
          git checkout -b "$branch_name"

      - name: Get and Change Component Versions
        id: get_versions
        run: |
          components=("perf-timing" "imperative" "cli-test-utils" "secrets-for-zowe-sdk" "core-for-zowe-sdk" "zos-uss-for-zowe-sdk" "provisioning-for-zowe-sdk" "zos-console-for-zowe-sdk" "zos-files-for-zowe-sdk" "zos-logs-for-zowe-sdk" "zosmf-for-zowe-sdk" "zos-workflows-for-zowe-sdk" "zos-jobs-for-zowe-sdk" "zos-tso-for-zowe-sdk" "cli" "cics-for-zowe-cli" "db2-for-zowe-cli" "ims-for-zowe-cli" "mq-for-zowe-cli" "secure-credential-store-for-zowe-cli" "zos-ftp-for-zowe-cli")
          zowe_version="${{ github.event.inputs.zowe_version }}"
          version="${{ github.event.inputs.version }}"
          echo "This PR updates the following package versions in zowe-versions.yaml for \`$zowe_version\`" >> description.txt
          echo "| Updated Package | Old Version | New Version |" >> description.txt
          echo "| --- | --- | --- |" >> description.txt
          for component in "${components[@]}"; do
            current_version=$(grep -A 2 "^  $component:" zowe-versions.yaml | grep "$zowe_version" | awk '{print $2}')
            new_version=$(npm view @zowe/$component "dist-tags.$zowe_version")
            if [[ "$new_version" != "$current_version" ]]; then
              echo "|$component | $current_version | $new_version|" >> description.txt
              sed -i -E "/^  $component:/ { n; s/($zowe_version: ).*/\1$new_version/; t; n; s/($zowe_version: ).*/\1$new_version/ }" zowe-versions.yaml
            fi
          done

          # Update zowe-versions.yaml tags section
          sed -i -E "/$zowe_version:/ { n; s/(version: ).*/\1$version/ }" zowe-versions.yaml


      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -am "Update component versions"
          git push origin HEAD

      - name: Create Pull Request
        run: |
          version_name="${{ github.event.inputs.version }}"
          branch_name="update-versions-${version_name}"
          pr_title="Update versions for $version_name"
          body_file=description.txt
          gh pr create --base master --head "$branch_name" --title "$pr_title" --body-file "$body_file" --reviewer atorrise
          echo "Pull Request created successfully"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete description.txt
        run: rm description.txt